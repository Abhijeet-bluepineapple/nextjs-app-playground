name: Assertions and Static Report

on: [push]

jobs:
  lighthouse-report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Dependencies
        run: npm install -g @unlighthouse/cli puppeteer netlify-cli jq

      - name: Run Unlighthouse CI
        id: unlighthouse
        run: unlighthouse-ci --build-static --output=json > unlighthouse-output.json

      - name: Extract and Save Scores
        id: extract-scores
        run: |
          performance=$(jq '.summary.performance' unlighthouse-output.json)
          accessibility=$(jq '.summary.accessibility' unlighthouse-output.json)
          bestPractices=$(jq '.summary.bestPractices' unlighthouse-output.json)
          seo=$(jq '.summary.seo' unlighthouse-output.json)
          echo "PERFORMANCE=${performance}" >> $GITHUB_ENV
          echo "ACCESSIBILITY=${accessibility}" >> $GITHUB_ENV
          echo "BEST_PRACTICES=${bestPractices}" >> $GITHUB_ENV
          echo "SEO=${seo}" >> $GITHUB_ENV

      - name: Deploy to Netlify
        run: netlify deploy --dir=.unlighthouse --prod --message="New Release Deploy from GitHub Actions"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  comment:
    runs-on: ubuntu-latest
    needs: lighthouse-report
    steps:
      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            const { PERFORMANCE, ACCESSIBILITY, BEST_PRACTICES, SEO } = process.env;
            const commentBody = `
              ## Unlighthouse Scores
              - **Performance**: ${PERFORMANCE}
              - **Accessibility**: ${ACCESSIBILITY}
              - **Best Practices**: ${BEST_PRACTICES}
              - **SEO**: ${SEO}
            `;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            })
        env:
          PERFORMANCE: ${{ env.PERFORMANCE }}
          ACCESSIBILITY: ${{ env.ACCESSIBILITY }}
          BEST_PRACTICES: ${{ env.BEST_PRACTICES }}
          SEO: ${{ env.SEO }}
